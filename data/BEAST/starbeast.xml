<beast>

  <!-- the names of all distinct rows across alignments as a flat list, distinguish between in and outgroup -->
[% rows=[] -%]
[% ingrouprows=[] -%]
[% outgrouprows=[] -%]
[% FOREACH matrix IN data.get_matrices -%]
[% FOREACH row IN matrix.get_entities -%]
[% name=row.get_name -%]
[% rows.push(name) -%]
[% tid=name.split('_').0 -%]
[% IF outgroup.defined(tid) -%]
[% outgrouprows.push(name) -%]
[% ELSE -%]
[% ingrouprows.push(name) -%]
[% END -%]
[% END -%]
[% END -%]
[% rows=rows.sort -%]
[% outgrouprows=outgrouprows.sort -%]
[% ingrouprows=ingrouprows.sort -%]

  <taxa id="taxa">
	[% FOREACH row IN rows.unique -%]
	<taxon id="taxon_[% row %]"/>
	[% END -%]
  </taxa>  
  <taxa id="ingroup">
	[% FOREACH row IN ingrouprows.unique -%]
	<taxon idref="taxon_[% row %]"/>
	[% END -%]
  </taxa>
  
  [% IF outgrouprows.size > 0 -%]
  <taxa id="outgroup">
	[% FOREACH row IN outgrouprows.unique -%]
    <taxon idref="taxon_[% row %]"/>
	[% END -%]
  </taxa>
  [% END -%]
  
  <!-- coalescent process with constant population size -->
  <constantSize id="constant" units="substitutions">
    <populationSize>
      <parameter id="constant.popSize" lower="0.0" upper="Infinity" value="0.005"/>
    </populationSize>
  </constantSize> 
  
  <!-- data and model settings for all the alignments -->
  [% counter = 0 -%]
  [% FOREACH matrix IN data.get_matrices -%]
    [% id = matrix.get_name -%]
    [% counter = counter + 1 -%]
    [% nchar = matrix.get_nchar -%]
    [% N = 'N' -%]
    <alignment dataType="nucleotide" id="[% id %]">
      [% FOREACH row IN rows.unique -%]
        [% seq = matrix.get_by_name(row) -%]
        [% IF seq -%]
          <!-- aligned sequence data for http://ncbi.nlm.nih.gov/nuccore/[% seq.get_meta_object('smrt:gi') %] -->
          <sequence><taxon idref="taxon_[% seq.get_name %]"/>[% seq.get_char.join('') %]</sequence>
        [% ELSE -%]
          <!-- no sequence data for [% row %] in alignment [% id %] -->
          <sequence><taxon idref="taxon_[% row %]"/>[% N.repeat(nchar) %]</sequence>
        [% END -%]
      [% END %]
    </alignment>
    
    <!-- site patterns -->
    <patterns from="1" id="[% id %].patterns">
      <alignment idref="[% id %]"/>
    </patterns>
    
    <!-- coalescent starting tree -->
    <coalescentTree id="[% id %].startingTree" rootHeight="0.02">
      <constrainedTaxa>
		<taxa idref="taxa"/>
 		<tmrca monophyletic="true"> 
		  <taxa idref="ingroup"/> 
		</tmrca>
	  </constrainedTaxa>
      <constantSize idref="constant"/>
    </coalescentTree> 
    
    <!-- tree model -->
    <treeModel id="[% id %].treeModel">
      <coalescentTree idref="[% id %].startingTree"/>
      <rootHeight>
        <parameter id="[% id %].treeModel.rootHeight"/>
      </rootHeight>
      <nodeHeights internalNodes="true">
        <parameter id="[% id %].treeModel.internalNodeHeights"/>
      </nodeHeights>
      <nodeHeights internalNodes="true" rootNode="true">
        <parameter id="[% id %].treeModel.allInternalNodeHeights"/>
      </nodeHeights>
    </treeModel>

	<!-- constrain ingroup to be monophyletic -->   
	<tmrcaStatistic id="tmrca.ingroup.[% id %]" includeStem="false"> 
      <mrca>
		<taxa idref="ingroup"/>   
      </mrca>                                                   
      <treeModel idref="[% id %].treeModel"/>
	</tmrcaStatistic>
	<monophylyStatistic id="monophyly.ingroup.[% id %]">
      <mrca>
		<taxa idref="ingroup"/>
      </mrca>
      <treeModel idref="[% id %].treeModel"/>
	</monophylyStatistic>
	
    <!-- coalescent likelihood -->
    <coalescentLikelihood id="[% id %].coalescent">
      <model><constantSize idref="constant"/></model>
      <populationTree><treeModel idref="[% id %].treeModel"/></populationTree>
    </coalescentLikelihood>

    <!-- strict clock parameters -->
    <strictClockBranchRates id="[% id %].branchRates">
      <rate>
        [% IF counter == 1 %]
          <parameter id="[% id %].clock.rate" value="1.0"/>
        [% ELSE %]
          <parameter id="[% id %].clock.rate" value="1.0" lower="0.0" upper="Infinity"/>
        [% END %]
      </rate>
    </strictClockBranchRates>
    
    <!-- HKY85 substitution model parameters -->
    <HKYModel id="[% id %].hky">
      <frequencies>
        <frequencyModel dataType="nucleotide">
          <alignment idref="[% id %]"/>
          <frequencies>
            <parameter dimension="4" id="[% id %].frequencies"/>
          </frequencies>
        </frequencyModel>
      </frequencies>
      <kappa>
        <parameter id="[% id %].kappa" lower="0.0" value="2.0"/>
      </kappa>
    </HKYModel>

    <!-- site model: HKY85+G -->
    <siteModel id="[% id %].siteModel">
      <gammaShape gammaCategories="4">
        <parameter id="[% id %].alpha" lower="0.0" value="0.5"/>
      </gammaShape>
      <substitutionModel>
        <HKYModel idref="[% id %].hky"/>
      </substitutionModel>
    </siteModel>

    <!-- tree likelihood model -->  
    <treeLikelihood id="[% id %].treeLikelihood" useAmbiguities="false">
      <patterns idref="[% id %].patterns"/>
      <treeModel idref="[% id %].treeModel"/>
      <siteModel idref="[% id %].siteModel"/>
      <strictClockBranchRates idref="[% id %].branchRates"/>
    </treeLikelihood>
  [% END %]   
  
  <!-- species normalization -->
  <species id="species">
    [% ntax = 0 -%]
    [% FOREACH taxa IN data.get_taxa -%]
      [% FOREACH taxon IN taxa.get_entities -%]
      
        [% taxon_rows = [] -%]
        [% FOREACH row IN taxon.get_data -%]
          [% taxon_rows.push(row.get_name) -%]
        [% END -%]
        
        [% IF taxon_rows.unique.size > 0 -%]  
          [% ntax = ntax + 1 -%]    
          <!-- reference to the species http://ncbi.nlm.nih.gov/taxonomy/[% taxon.get_meta_object('smrt:tid') %] -->
          <sp id="[% taxon.get_name %]">
          [% FOREACH row_name IN taxon_rows.unique -%]
            <!-- reference to a distinct row name across all alignments -->
            <taxon idref="taxon_[% row_name %]"/>
          [% END -%]
          </sp>
        [% ELSE -%]
          <!-- no data for [% taxon.get_name %] in any alignment -->
        [% END -%]
      [% END -%]
    [% END -%]
    <geneTrees id="geneTrees">
      [% FOREACH matrix IN data.get_matrices %]
        [% id = matrix.get_name %]
        <!-- reference to the tree model for [% id %] -->
        <treeModel idref="[% id %].treeModel"/>
      [% END %]
    </geneTrees>
  </species>

  <!-- species tree: provides per branch demographic function -->  
  <speciesTree constantRoot="true" id="sptree">
    <species idref="species"/>
    <sppSplitPopulations value="0.02">
      <parameter id="speciesTree.splitPopSize"/>
    </sppSplitPopulations>
  </speciesTree>

  <!-- species tree: birth/death model -->
  <birthDeathModel id="birthDeath" units="substitutions">
    <birthMinusDeathRate>
      <parameter id="species.birthDeath.meanGrowthRate" lower="0.0" upper="Infinity" value="1.0"/>
    </birthMinusDeathRate>
    <relativeDeathRate>
      <parameter id="species.birthDeath.relativeDeathRate" lower="0.0" upper="1.0" value="0.5"/>
    </relativeDeathRate>
  </birthDeathModel>

  <!-- species tree: likelihood -->
  <speciationLikelihood id="speciation.likelihood">
    <model>
      <birthDeathModel idref="birthDeath"/>
    </model>
    <speciesTree>
      <speciesTree idref="sptree"/>
    </speciesTree>
  </speciationLikelihood>
  <tmrcaStatistic id="speciesTree.rootHeight" name="speciesTree.rootHeight">
    <speciesTree idref="sptree"/>
    <mrca>
      <taxa>
        [% FOREACH taxa in data.get_taxa %]
          [% FOREACH taxon IN taxa.get_entities %]
            [% IF taxon.get_data.size > 0 %]
              <!-- reference to species [% taxon.get_name %] -->
              <sp idref="[% taxon.get_name %]"/>
            [% END %]
          [% END %]
        [% END %]
      </taxa>
    </mrca>
  </tmrcaStatistic>
  <speciesCoalescent id="species.coalescent">
    <species idref="species"/>
    <speciesTree idref="sptree"/>
  </speciesCoalescent>

  <!-- species tree: gamma2 + gamma4 -->  
  <mixedDistributionLikelihood id="species.popSize">
    <distribution0>
      <gammaDistributionModel>
        <scale><parameter id="species.popMean" lower="0.0" value="0.01"/></scale>
        <shape>2</shape>
      </gammaDistributionModel>
    </distribution0>
    <distribution1>
      <gammaDistributionModel>
        <shape>4</shape>
        <scale><parameter idref="species.popMean"/></scale>
      </gammaDistributionModel>
    </distribution1>
    <data>
      <parameter idref="speciesTree.splitPopSize"/>
    </data>
    <indicators>
      [% indicators = [] -%]
      [% WHILE indicators.size < ntax -%]
        [% indicators.push('1') -%]
      [% END -%]
      [% WHILE indicators.size < ( ( 2 * ntax ) + ( ntax - 2 ) ) -%]
        [% indicators.push('0') -%]
      [% END -%]
      <parameter value="[% indicators.join(' ') %]"/>
    </indicators>
  </mixedDistributionLikelihood>
  
  <!-- proposal mechanisms -->
  <operators id="operators">
    [% counter = 0 -%]
    [% FOREACH matrix IN data.get_matrices -%]
    [% id = matrix.get_name -%]
    [% counter = counter + 1 %]
      <!-- proposal mechanisms for [% id %] -->
      <!-- operators for the substitution process -->
      <scaleOperator scaleFactor="0.75" weight="0.1">
        <parameter idref="[% id %].alpha"/>
      </scaleOperator>
      <scaleOperator scaleFactor="0.75" weight="0.1">
        <parameter idref="[% id %].kappa"/>
      </scaleOperator>
      <deltaExchange delta="0.01" weight="1">
        <parameter idref="[% id %].frequencies"/>
      </deltaExchange>
      <!-- operators for the tree topology -->
      <subtreeSlide gaussian="true" size="0.001" weight="15">
        <treeModel idref="[% id %].treeModel"/>
      </subtreeSlide>
      <narrowExchange weight="15">
        <treeModel idref="[% id %].treeModel"/>
      </narrowExchange>
      <wideExchange weight="3">
        <treeModel idref="[% id %].treeModel"/>
      </wideExchange>
      <wilsonBalding weight="3">
        <treeModel idref="[% id %].treeModel"/>
      </wilsonBalding>
      <scaleOperator scaleFactor="0.75" weight="3">
        <parameter idref="[% id %].treeModel.rootHeight"/>
      </scaleOperator>
      <uniformOperator weight="30">
        <parameter idref="[% id %].treeModel.internalNodeHeights"/>
      </uniformOperator>
      [% IF counter == 1 %]
        <upDownOperator scaleFactor="0.75" weight="3">
          <up></up>
         <down><parameter idref="[% id %].treeModel.allInternalNodeHeights"/></down>
        </upDownOperator>
      [% ELSE %]
        <!-- operators for the strict clock -->
        <scaleOperator scaleFactor="0.75" weight="3">
          <parameter idref="[% id %].clock.rate"/>
        </scaleOperator>
        <upDownOperator scaleFactor="0.75" weight="3">
          <up><parameter idref="[% id %].clock.rate"/></up>
          <down><parameter idref="[% id %].treeModel.allInternalNodeHeights"/></down>
        </upDownOperator>
      [% END %]
    [% END %]
    <!-- combined up/down operator -->
    <upDownOperator scaleFactor="0.75" weight="30">
      <up>
        [% counter = 0 -%]
        [% FOREACH matrix IN data.get_matrices -%]
          [% id = matrix.get_name -%]
          [% IF counter -%]
            <parameter idref="[% id %].clock.rate"/>
          [% END -%]
          [% counter = counter + 1 -%]
        [% END -%]
        <parameter idref="species.birthDeath.meanGrowthRate"/>
      </up>
      <down>
        <speciesTree idref="sptree"/>
        <parameter idref="species.popMean"/>
        <parameter idref="speciesTree.splitPopSize"/>
        [% FOREACH matrix IN data.get_matrices -%]
          [% id = matrix.get_name %]
            <parameter idref="[% id %].treeModel.allInternalNodeHeights"/>
        [% END -%]
      </down>
    </upDownOperator>
    <!-- operators for the diversification process -->
    <scaleOperator scaleFactor="0.75" weight="3">
      <parameter idref="species.birthDeath.relativeDeathRate"/>
    </scaleOperator>
    <scaleOperator scaleFactor="0.5" weight="94">
      <parameter idref="speciesTree.splitPopSize"/>
    </scaleOperator>
    <scaleOperator scaleFactor="0.9" weight="5">
      <parameter idref="species.popMean"/>
    </scaleOperator>
    <scaleOperator scaleFactor="0.75" weight="3">
      <parameter idref="species.birthDeath.meanGrowthRate"/>
    </scaleOperator>
    <nodeReHeight weight="94">
      <species idref="species"/>
      <speciesTree idref="sptree"/>
    </nodeReHeight>
  </operators>
  
  <!-- mcmc settings -->
  <mcmc autoOptimize="true" chainLength="[% chain_length %]" id="mcmc">
  
    <!-- posterior -->
    <posterior id="posterior">
    
      <!-- priors -->
      <prior id="prior">
        <speciesCoalescent idref="species.coalescent"/>
        <mixedDistributionLikelihood idref="species.popSize"/>
        <speciationLikelihood idref="speciation.likelihood"/>
        [% FOREACH matrix IN data.get_matrices %]
          [% id = matrix.get_name %]
          <!-- priors for [% id %] -->
          <logNormalPrior mean="1.0" meanInRealSpace="false" offset="0.0" stdev="1.25">
            <parameter idref="[% id %].kappa"/>
          </logNormalPrior>
          <exponentialPrior mean="0.5" offset="0.0">
            <parameter idref="[% id %].alpha"/>
          </exponentialPrior>
          <coalescentLikelihood idref="[% id %].coalescent"/>
		  <booleanLikelihood>
			<monophylyStatistic idref="monophyly.ingroup.[% id %]"/>
		  </booleanLikelihood>
        [% END %]

        <!-- diversification priors -->
        <logNormalPrior mean="-7.0" stdev="2.0">
          <parameter idref="species.popMean"/>
        </logNormalPrior> 
        <logNormalPrior mean="4.6" stdev="2.0">
          <parameter idref="species.birthDeath.meanGrowthRate"/>
        </logNormalPrior>
        <betaPrior shape="1.0" shapeB="1.0">
          <parameter idref="species.birthDeath.relativeDeathRate"/>
        </betaPrior>

      </prior>
      
      <!-- likelihood -->
      <likelihood id="likelihood">
        [% FOREACH matrix IN data.get_matrices %]
        [% id = matrix.get_name %]        
          <treeLikelihood idref="[% id %].treeLikelihood"/>
        [% END %]
      </likelihood>
    </posterior>
    
    <!-- operators -->
    <operators idref="operators"/>
    
    <!-- where to log parameters -->
    <log fileName="[% logfile_name %]" logEvery="[% sample_freq %]">
      <posterior idref="posterior"/>
      <prior idref="prior"/>
      <likelihood idref="likelihood"/>
      <parameter idref="species.popMean"/>
      <parameter idref="speciesTree.splitPopSize"/>
      <parameter idref="species.birthDeath.meanGrowthRate"/>
      <parameter idref="species.birthDeath.relativeDeathRate"/>
      [% FOREACH matrix IN data.get_matrices %]
        [% id = matrix.get_name %]
        <parameter idref="[% id %].treeModel.rootHeight"/>
        <parameter idref="[% id %].kappa"/>
        <parameter idref="[% id %].frequencies"/>
        <parameter idref="[% id %].clock.rate"/>
        <treeLikelihood idref="[% id %].treeLikelihood"/>
        <coalescentLikelihood idref="[% id %].coalescent"/>
      [% END %]
    </log>
    
    <!-- where to log output species trees -->
    <logTree 
      fileName="[% outfile_name %]" 
      id="species.treeFileLog" 
      logEvery="[% sample_freq %]" 
      nexusFormat="true" 
      sortTranslationTable="true">
      <speciesTree idref="sptree"/>
      <posterior idref="posterior"/>
    </logTree>
    
  </mcmc>
</beast>
